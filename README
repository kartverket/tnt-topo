# TNT Topo - QGIS Project Files

## Overview
This repository contains QGIS project files for the TNT team's new Topographic map service. The project files define map layers, styling, and data sources for cartographic production.

## Main Project Files
The main project files are moved to an houseintern s3 solution for now.le

## Test Project Files
These files are used for testing and development purposes and might be removed in the future:
- **data/enkel.qgs** - Simplified version with a reduced set of layers from the main project
- **data/earth.qgs** - Test file containing selected Natural Earth dataset layers

## Scripts
The `/scripts` directory contains utilities for managing QGIS project files:

- **clean_qgis_for_git.py** - Removes sensitive credentials from QGIS project files before committing to Git
- **qgis_handling.py** - Handles QGIS project operations including:
  - Reinserting passwords from environment variables
  - Extracting datasources
  - Replacing datasource connections
  - URL encoding for special characters
  - Extracting layers by datasource pattern
- **install_hooks.py** - Installs Git hooks for password protection
- **download_data.py** - Downloads geospatial data for the QGIS projects

## Usage

### Installing Dependencies
```bash
pip install -r requirements.txt
```

3. **Set up Git hooks** (recommended):
   ```bash
   python3 scripts/install_hooks.py
   ```

4. **Open a project in QGIS**:
   - Launch QGIS
   - Open `data/Topo_2025.qgs`
   - Wait for initial layer loading (2000+ layers)

### üîß Environment Setup
For database connections, set up environment variables:
```bash
export QGIS_DB_PASSWORD="your_database_password"
export QGIS_DB_USER="your_username"
```

## üìö Documentation

### üóÇÔ∏è Layer Documentation
Comprehensive documentation with all layer specifications is available:
- **[üìñ Full Layer Documentation](docs/Topo_2025.md)** - Complete technical specifications
- **[üéØ Quick Reference Guide](#)** - Essential layer information
- **[üó∫Ô∏è Coverage Maps](#)** - Geographic extent and scale information

### üõ†Ô∏è Automation Tools

#### üìã Layer Documentation Generator
Generates comprehensive documentation optimized for GitHub Wiki publishing:

```bash
# üéØ Generate complete GitHub Wiki documentation
python3 scripts/document_qgis_layers.py ./data/Topo_2025.qgs \
  --output wiki/Topo-Documentation.md \
  --sidebar wiki/_Sidebar.md

# üìä Generate without legends (faster)
python3 scripts/document_qgis_layers.py ./data/Topo_2025.qgs \
  --no-legends --output docs/Topo-Quick-Reference.md

# üîß Generate with custom QGIS Server configuration
python3 scripts/document_qgis_layers.py ./data/Topo_2025.qgs \
  --legend-base-url "https://your-qgis-server.com/qgis/" \
  --legend-map-file "/path/to/your/project.qgs" \
  --output wiki/Documentation.md

# üìà Generate with CSV export for analysis
python3 scripts/document_qgis_layers.py ./data/Topo_2025.qgs \
  --output docs/Layer-Documentation.md \
  --csv data/layer-analysis.csv
```

## üõ†Ô∏è Utility Scripts

The `/scripts` directory provides powerful automation tools:

| Script | Purpose | Key Features |
|--------|---------|--------------|
| **`clean_qgis_for_git.py`** | üîí **Security** | Removes credentials before Git commits |
| **`qgis_handling.py`** | ‚öôÔ∏è **Project Management** | Password restoration, datasource operations |
| **`install_hooks.py`** | üîß **Setup** | Installs Git hooks for credential protection |
| **`download_data.py`** | üì• **Data Management** | Downloads Natural Earth test datasets |
| **`document_qgis_layers.py`** | üìö **Documentation** | Generates comprehensive layer documentation |

### üîí Security Features
- **Automatic credential removal** before Git commits
- **Environment variable integration** for sensitive data
- **Pre-commit hooks** to prevent credential leaks
- **Password restoration** from environment variables

### ‚öôÔ∏è Core Operations
- **Datasource extraction and replacement**
- **URL encoding for special characters** 
- **Layer filtering by datasource patterns**
- **Batch processing capabilities**

## üíª Usage Examples

### üîê Credential Management
#### üîê Clean Projects Before Committing
```bash
# Clean all QGIS files in data directory (recommended before commits)
python3 scripts/clean_qgis_for_git.py -d ./data -v

# Clean specific project file
python3 scripts/clean_qgis_for_git.py -f ./data/Topo_2025.qgs -v
```

#### üîë Restore Credentials for Development
```bash
# Restore passwords from environment variables
python3 scripts/qgis_handling.py --reinsert-passwords -v

# Restore specific project
python3 scripts/qgis_handling.py --reinsert-passwords -f ./data/Topo_2025.qgs -v
```

### üì• Development Data Setup
#### üåç Natural Earth Test Data (Optional)
Download Natural Earth datasets for development and testing:

```bash
# üì¶ Download all test datasets (countries, lakes, boundaries)
python3 scripts/download_data.py -v

# üéØ Download specific datasets only
python3 scripts/download_data.py -s countries lakes -v

# üîÑ Force redownload and conversion to FlatGeobuf
python3 scripts/download_data.py --force -v
```

> **‚ö†Ô∏è Note**: Requires GDAL/OGR tools for FlatGeobuf conversion. Install with: `conda install gdal` or `apt-get install gdal-bin`

## üèóÔ∏è Development Workflow

### üîÑ Recommended Development Process
1. **Pull latest changes**: `git pull origin main`
2. **Clean credentials**: `python3 scripts/clean_qgis_for_git.py -d ./data -v`
3. **Restore passwords**: `python3 scripts/qgis_handling.py --reinsert-passwords -v`
4. **Work in QGIS**: Make your changes
5. **Clean before commit**: Pre-commit hook automatically runs
6. **Commit and push**: `git add . && git commit -m "Description" && git push`

### Contributing
For contributing to this repository:
1. Ensure your QGIS project files are cleaned of credentials before committing
2. Install the Git hooks to automatically prevent committing files with credentials
3. Use environment variables for storing sensitive data
